// Code generated by MockGen. DO NOT EDIT.
// Source: ../apiclient/twelve_data_client.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	apiclient "github.com/galushkoart/finance-api/pkg/apiclient"
	gomock "github.com/golang/mock/gomock"
)

// MockTwelveDataClient is a mock of TwelveDataClient interface.
type MockTwelveDataClient struct {
	ctrl     *gomock.Controller
	recorder *MockTwelveDataClientMockRecorder
}

// MockTwelveDataClientMockRecorder is the mock recorder for MockTwelveDataClient.
type MockTwelveDataClientMockRecorder struct {
	mock *MockTwelveDataClient
}

// NewMockTwelveDataClient creates a new mock instance.
func NewMockTwelveDataClient(ctrl *gomock.Controller) *MockTwelveDataClient {
	mock := &MockTwelveDataClient{ctrl: ctrl}
	mock.recorder = &MockTwelveDataClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTwelveDataClient) EXPECT() *MockTwelveDataClientMockRecorder {
	return m.recorder
}

// GetHistoricDataForSymbol mocks base method.
func (m *MockTwelveDataClient) GetHistoricDataForSymbol(ctx context.Context, symbol string) (*apiclient.TimeSeries, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHistoricDataForSymbol", ctx, symbol)
	ret0, _ := ret[0].(*apiclient.TimeSeries)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetHistoricDataForSymbol indicates an expected call of GetHistoricDataForSymbol.
func (mr *MockTwelveDataClientMockRecorder) GetHistoricDataForSymbol(ctx, symbol interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHistoricDataForSymbol", reflect.TypeOf((*MockTwelveDataClient)(nil).GetHistoricDataForSymbol), ctx, symbol)
}
