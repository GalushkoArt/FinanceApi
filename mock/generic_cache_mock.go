// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/GalushkoArt/simpleCache (interfaces: GenericCache[any])

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockGenericCache[T any] is a mock of GenericCache[T any] interface.
type MockGenericCache[T any] struct {
	ctrl     *gomock.Controller
	recorder *MockGenericCacheMockRecorder[T]
}

// MockGenericCache[T any]MockRecorder is the mock recorder for MockGenericCache[any].
type MockGenericCacheMockRecorder[T any] struct {
	mock *MockGenericCache[T]
}

// NewMockGenericCache[T any] creates a new mock instance.
func NewMockGenericCache[T any](ctrl *gomock.Controller) *MockGenericCache[T] {
	mock := &MockGenericCache[T]{ctrl: ctrl}
	mock.recorder = &MockGenericCacheMockRecorder[T]{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGenericCache[T]) EXPECT() *MockGenericCacheMockRecorder[T] {
	return m.recorder
}

// Delete mocks base method.
func (m *MockGenericCache[T]) Delete(arg0 string) *T {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0)
	ret0, _ := ret[0].(*T)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockGenericCacheMockRecorder[T]) Delete(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockGenericCache[T])(nil).Delete), arg0)
}

// Get mocks base method.
func (m *MockGenericCache[T]) Get(arg0 string) *T {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(*T)
	return ret0
}

// Get indicates an expected call of Get.
func (mr *MockGenericCacheMockRecorder[T]) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockGenericCache[T])(nil).Get), arg0)
}

// Set mocks base method.
func (m *MockGenericCache[T]) Set(arg0 string, arg1 T) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Set", arg0, arg1)
}

// Set indicates an expected call of Set.
func (mr *MockGenericCacheMockRecorder[T]) Set(arg0 string, arg1 T) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockGenericCache[T])(nil).Set), arg0, arg1)
}
