CREATE TABLE SYMBOL
(
    ID             BIGSERIAL PRIMARY KEY,
    SYMBOL         VARCHAR NOT NULL,
    NAME           VARCHAR NOT NULL,
    TYPE           VARCHAR NOT NULL,
    CURRENCY       VARCHAR,
    CURRENCY_BASE  VARCHAR,
    CURRENCY_QUOTE VARCHAR
);
CREATE INDEX SYMBOL_IDX ON SYMBOL (SYMBOL);

CREATE TABLE PRICE
(
    SYMBOL_ID BIGINT  NOT NULL REFERENCES SYMBOL (ID) ON DELETE CASCADE,
    DATE      DATE    NOT NULL,
    OPEN      NUMERIC NOT NULL,
    CLOSE     NUMERIC NOT NULL,
    HIGH      NUMERIC NOT NULL,
    LOW       NUMERIC NOT NULL,
    VOLUME    VARCHAR
);
CREATE UNIQUE INDEX SYMBOL_ID_DATE_UNIQUE_IDX ON PRICE (SYMBOL_ID, DATE);

CREATE TABLE EXCHANGE
(
    ID       BIGSERIAL PRIMARY KEY,
    NAME     VARCHAR NOT NULL,
    CODE     VARCHAR NOT NULL,
    COUNTRY  VARCHAR,
    TIMEZONE VARCHAR
);
CREATE UNIQUE INDEX EXCHANGE_NAME_CODE_UNIQUE_IDX ON EXCHANGE (NAME, CODE);

CREATE TABLE SYMBOL_EXCHANGE
(
    SYMBOL_ID   BIGINT REFERENCES SYMBOL (ID) ON DELETE CASCADE,
    EXCHANGE_ID BIGINT REFERENCES EXCHANGE (ID) ON DELETE CASCADE,
    CONSTRAINT SYMBOL_EXCHANGE_PK PRIMARY KEY (SYMBOL_ID, EXCHANGE_ID)
);

CREATE VIEW V_SYMBOL_INFO AS
SELECT S.ID,
       S.SYMBOL,
       S.NAME,
       S.TYPE,
       S.CURRENCY,
       S.CURRENCY_BASE,
       S.CURRENCY_QUOTE,
       P.DATE,
       P.OPEN,
       P.CLOSE,
       P.HIGH,
       P.LOW,
       P.VOLUME
FROM SYMBOL S
         JOIN PRICE P ON S.ID = P.SYMBOL_ID
ORDER BY S.SYMBOL;

CREATE VIEW V_LATEST_SYMBOL_INFO AS
SELECT S.ID,
       S.SYMBOL,
       S.NAME,
       S.TYPE,
       S.CURRENCY,
       S.CURRENCY_BASE,
       S.CURRENCY_QUOTE,
       LP.DATE,
       LP.OPEN,
       LP.CLOSE,
       LP.HIGH,
       LP.LOW,
       LP.VOLUME
FROM SYMBOL S
         JOIN (SELECT SYMBOL_ID,
                      DATE,
                      OPEN,
                      CLOSE,
                      HIGH,
                      LOW,
                      VOLUME,
                      ROW_NUMBER() OVER (PARTITION BY SYMBOL_ID ORDER BY DATE DESC) AS RN
               FROM PRICE) LP ON LP.SYMBOL_ID = S.ID
WHERE LP.RN = 1
ORDER BY S.SYMBOL;

CREATE TABLE USER_ENTITY
(
    ID         UUID PRIMARY KEY,
    USERNAME   VARCHAR NOT NULL,
    EMAIL      VARCHAR NOT NULL,
    PASSWORD   VARCHAR NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT NOW(),
    UPDATED_AT TIMESTAMP DEFAULT NOW()
);
CREATE UNIQUE INDEX USER_USERNAME_IDX ON USER_ENTITY (USERNAME);
CREATE UNIQUE INDEX USER_EMAIL_IDX ON USER_ENTITY (EMAIL);

CREATE TABLE USER_ROLES
(
    ID         BIGSERIAL PRIMARY KEY,
    USER_ID    UUID    NOT NULL REFERENCES USER_ENTITY ON DELETE CASCADE,
    ROLE       VARCHAR NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT NOW()
);
CREATE INDEX USER_ROLES_USER_ID_IDX ON USER_ROLES (USER_ID);

CREATE TABLE REFRESH_TOKEN
(
    ID         BIGSERIAL PRIMARY KEY,
    USER_ID    UUID      NOT NULL REFERENCES USER_ENTITY ON DELETE CASCADE,
    TOKEN      VARCHAR   NOT NULL,
    EXPIRES_AT TIMESTAMP NOT NULL
);
CREATE UNIQUE INDEX REFRESH_TOKEN_TOKEN_IDX ON REFRESH_TOKEN (TOKEN);